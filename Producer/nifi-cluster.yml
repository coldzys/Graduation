version: "3.8"

services:
  # Kafka goes here
  zookeeper:
    image: bitnami/zookeeper:3.8.0
    container_name: zookeeper
    restart: on-failure
    networks:
      cluster-network:
        ipv4_address: 192.168.0.10
    hostname: zookeeper
    environment:
      - ZOO_PORT_NUMBER=2181
      - ZOO_SERVER_ID=1
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper-data:/bitnami/zookeeper

  kafka:
    image: bitnami/kafka:3.1.1
    container_name: kafka
    restart: on-failure
    networks:
      cluster-network:
        ipv4_address: 192.168.0.11
    hostname: kafka
    environment:
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=LISTENER_DOCKER_INTERNAL://:19092,LISTENER_DOCKER_EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://192.168.0.11:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=LISTENER_DOCKER_INTERNAL
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka-data:/bitnami/kafka
    depends_on:
      - zookeeper
    deploy:
      resources:
        limits:
          cpus: "1.00"
          memory: 2048M

  kafka-manager:
    image: hlebalbau/kafka-manager:3.0.0.5
    container_name: kafka-manager
    restart: on-failure
    networks:
      cluster-network:
        ipv4_address: 192.168.0.12
    hostname: kafka-manager
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "random-secret"
    command: -Dpidfile.path=/dev/null
    depends_on:
      - "zookeeper"
      - "kafka"

  nifi:
    image: apache/nifi:1.16.1
    container_name: nifi
    user: root
    restart: on-failure
    networks:
      cluster-network:
        ipv4_address: 192.168.0.13
    hostname: nifi
    environment:
      - NIFI_WEB_HTTP_PORT=8080
      - NIFI_CLUSTER_IS_NODE=true
      - NIFI_CLUSTER_NODE_PROTOCOL_PORT=8082
      - NIFI_ZK_CONNECT_STRING=zookeeper:2181
      - NIFI_ELECTION_MAX_WAIT=30 sec
      - NIFI_SENSITIVE_PROPS_KEY='12345678901234567890A'
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://nifi:8080/nifi/" ]
      interval: 30s
      timeout: 20s
      retries: 3

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    networks:
      cluster-network:
        ipv4_address: 192.168.0.14
    hostname: namenode
    environment:
      - CLUSTER_NAME=hadoop-cluster
    env_file:
      - ./hadoop.env
    volumes:
      - namenode:/hadoop/dfs/name

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    networks:
      - cluster-network
    hostname: datanode
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
    volumes:
      - datanode:/hadoop/dfs/data

networks:
  cluster-network:
    name: cluster-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/16
          gateway: 192.168.0.1

volumes:
  zookeeper-data:
    name: zookeeper-data
    driver: local
  kafka-data:
    name: kafka-data
    driver: local
  namenode:
    name: namenode
    driver: local
  datanode:
    name: datanode
    driver: local
